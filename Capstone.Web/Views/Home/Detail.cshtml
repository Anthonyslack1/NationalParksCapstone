@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model Capstone.Web.Models.ParkDetailViewModel
@section Title{
    @Model.ParkDetails.ParkName
}
@{
    /* Initializes variables for use in code later on */
    /* This could probably occur in the model... */
    string parkImg = Model.ParkDetails.ParkCode + ".jpg";
    string forecastImg;
    string tempName = "Degrees Fahrenheit";
    double tempDiffForCelsius = 1;
    double tempTooHigh = 75;
    double tempTooLow = 20;
    string tempCheckedC = "checked = \"checked\"";
    string tempCheckedF = "";
    bool firstDay = true;
    bool helperUsed = false;
    /* Converts temperature if Celsius is specified */
    if (Model.TempType == 'C')
    {
        Model.ConvertTemp();
        tempName = "Degrees Celcius";
        tempDiffForCelsius = 5.0 / 9.0;
        tempTooHigh = (tempTooHigh - 32) * (5.0 * 9.0);
        tempTooLow = (tempTooLow - 32) * (5.0 * 9.0);
        tempCheckedC = "";
        tempCheckedF = "checked = \"checked\"";
    }
}

@functions{
    string GetTemp(double fVal, bool isCelcius)
    {
        return isCelcius ? (fVal - 32 * 5 / 9).ToString() + "C": fVal.ToString() + "F";
    }
}

<div class="detail">
    <div>
        <img src="~/Content/ParkImages/@parkImg" />
        <div class="quote">
            <div>@Model.ParkDetails.InspirationalQuote</div>
            <div>-@Model.ParkDetails.InspirationalQuoteSource</div>
        </div>
    </div>
    @{ 
        string acreage = String.Format("{0:n0}", Model.ParkDetails.Acreage);
        string campsites = String.Format("{0:n0}", Model.ParkDetails.NumberOfCampsites);
        string visitors = String.Format("{0:n0}", Model.ParkDetails.AnnualVisitorCount);
    }
    <h1>@Model.ParkDetails.ParkName</h1>
    <h3>@Model.ParkDetails.State</h3>
    <div class="info">
        <div>Acreage: @acreage acres</div>
        <div>Elevation: @Model.ParkDetails.ElevationInFeet ft.</div>
        <div>Miles of Trail: @Model.ParkDetails.MilesOfTrail</div>
        <div>Number of Campsites: @campsites</div>
        <div>Climate: @Model.ParkDetails.TypeOfClimate</div>
        <div>Year Founded: @Model.ParkDetails.YearFounded</div>
        <div>Annual Visitor Count: @visitors</div>
        <div>Number of Animal Species: @Model.ParkDetails.NumberOfAnimalSpecies</div>
        <div>Entry Fee: @Model.ParkDetails.EntryFee.ToString("C")</div>
    </div>
    <br />
    <div>@Model.ParkDetails.ParkDescription</div>
</div>

<div class="forecast">

    
    @foreach (var weatherDay in Model.Forecast.FiveDayForecast)
    {
        if (weatherDay.Forecast == "partly cloudy")
        {
            forecastImg = "partlyCloudy.png"; 
        }
        else
        {
            forecastImg = weatherDay.Forecast + ".png";
        }

        if (firstDay == true) /* Changes display of information if the weather is for the current day */
        {

            <div class="firstDay">
                <h2>Today</h2>
                <ul>
                    <li><img src="~/Content/WeatherImages/@forecastImg" /></li>
                    <li id="high">High: @weatherDay.High @tempName</li>
                    <li id="low">Low: @weatherDay.Low @tempName</li>
                    @if (Model.Advice.ContainsKey(weatherDay.Forecast))
                    {
                        <li id="advice">@Model.Advice[weatherDay.Forecast]</li>
                    }
                    @if (weatherDay.High > tempTooHigh)
                    {
                        <li id="advice">@Model.Advice["hot"]</li>
                    }

                    @if (weatherDay.Low < tempTooLow)
                    {
                        <li id="advice">@Model.Advice["cold"]</li>
                    }

                    @if (weatherDay.High - weatherDay.Low > 20 * tempDiffForCelsius)
                    {
                        <li id="advice">@Model.Advice["difference"]</li>
                    }
                </ul>
            </div>
            firstDay = false;
        }
        else
        {
            <div class="tooltip">
                <ul>
                    <li><img src="~/Content/WeatherImages/@forecastImg" /></li>
                    <li id="high">High: @weatherDay.High @tempName</li>
                    <li id="low">Low: @weatherDay.Low @tempName</li>
                    @if (Model.Advice.ContainsKey(weatherDay.Forecast))
                    {
                        if (!helperUsed)
                        {
                            <li class="helperText">Hover for more info</li>
                            helperUsed = true;
                        }
                        <li class="tooltiptext">@Model.Advice[weatherDay.Forecast]</li>
                    }
                    @if (weatherDay.High > tempTooHigh)
                    {
                        if (!helperUsed)
                        {
                            <li class="helperText">Hover for more info</li>
                            helperUsed = true;
                        }
                        <li class="tooltiptext">@Model.Advice["hot"]</li>
                    }

                    @if (weatherDay.Low < tempTooLow)
                    {
                        if (!helperUsed)
                        {
                            <li class="helperText">Hover for more info</li>
                            helperUsed = true;
                        }
                        <li class="tooltiptext">@Model.Advice["cold"]</li>
                    }

                    @if (weatherDay.High - weatherDay.Low > 20 * tempDiffForCelsius)
                    {
                        if (!helperUsed)
                        {
                            <li class="helperText">Hover for more info</li>
                            helperUsed = true;
                        }
                        <li class="tooltiptext">@Model.Advice["difference"]</li>
                    }
                    @{
                        helperUsed = false;
                     }
                </ul>
            </div>
        }

    }
</div>
<div class="conversionForm">
    <a name="weather"></a> @*/* Form implements an anchor to keep your place on the page after changing the temp type */*@
    <form method="post" action="~/Home/Detail/@Model.ParkDetails.ParkCode#weather">
        <input type="radio" id="tempType" name="tempType" value="C" style="display:none" @tempCheckedC />
        <input type="radio" id="tempType" name="tempType" value="F" style="display:none" @tempCheckedF />
        <button href="weather" class="button">Convert to @(Model.TempType == 'C' ? "Fahrenheit" : "Celsius")</button>
    </form>
</div>